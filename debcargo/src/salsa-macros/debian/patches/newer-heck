Index: salsa-macros/Cargo.toml
===================================================================
--- salsa-macros.orig/Cargo.toml
+++ salsa-macros/Cargo.toml
@@ -21,7 +21,7 @@ repository = "https://github.com/salsa-r
 [lib]
 proc-macro = true
 [dependencies.heck]
-version = "0.3"
+version = "0.4"
 
 [dependencies.proc-macro2]
 version = "1.0"
Index: salsa-macros/src/database_storage.rs
===================================================================
--- salsa-macros.orig/src/database_storage.rs
+++ salsa-macros/src/database_storage.rs
@@ -1,4 +1,4 @@
-use heck::SnakeCase;
+use heck::ToSnakeCase;
 use proc_macro::TokenStream;
 use syn::parse::{Parse, ParseStream};
 use syn::punctuated::Punctuated;
Index: salsa-macros/src/query_group.rs
===================================================================
--- salsa-macros.orig/src/query_group.rs
+++ salsa-macros/src/query_group.rs
@@ -1,7 +1,7 @@
 use std::convert::TryFrom;
 
 use crate::parenthesized::Parenthesized;
-use heck::CamelCase;
+use heck::ToUpperCamelCase;
 use proc_macro::TokenStream;
 use proc_macro2::Span;
 use quote::ToTokens;
@@ -43,7 +43,8 @@ pub(crate) fn query_group(args: TokenStr
             let mut cycle = None;
             let mut invoke = None;
 
-            let mut query_type = format_ident!("{}Query", query_name.to_string().to_camel_case());
+            let mut query_type =
+                format_ident!("{}Query", query_name.to_string().to_upper_camel_case());
             let mut num_storages = 0;
 
             // Extract attributes.
@@ -164,7 +165,7 @@ pub(crate) fn query_group(args: TokenStr
             //     fn lookup_foo(&self, x: u32) -> (Key1, Key2)
             let lookup_query = if let QueryStorage::Interned = storage {
                 let lookup_query_type =
-                    format_ident!("{}LookupQuery", query_name.to_string().to_camel_case());
+                    format_ident!("{}LookupQuery", query_name.to_string().to_upper_camel_case());
                 let lookup_fn_name = format_ident!("lookup_{}", query_name);
                 let keys = keys.iter().map(|(_, ty)| ty);
                 let lookup_value: Type = parse_quote!((#(#keys),*));
