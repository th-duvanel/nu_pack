Description: Fix bindgen feature
 - Use libraw.h from system package
 - replace blacklist by blocklist because blacklist doesn't exist anymore in
 newer versions of bindgen (since 0.63).
 - remove bindgen feature and always use bindgen because we link towards the
 libraw provided by Debian

--- a/Cargo.toml
+++ b/Cargo.toml
@@ -30,11 +30,12 @@
 [dependencies.libc]
 version = "0.2"
 [build-dependencies.bindgen]
-version = "0.57"
+version = ">= 0.63, < 1.0"
 features = ["runtime"]
-optional = true
-default-features = false
 
 [build-dependencies.cc]
 version = "1"
 features = ["parallel"]
+
+[build-dependencies.pkg-config]
+version = "0.3"
--- a/build.rs
+++ b/build.rs
@@ -6,7 +6,7 @@
     let out_dir = Path::new(&out_dir_);
 
     //build(&out_dir);
-    #[cfg(feature = "bindgen")]
+    //#[cfg(feature = "bindgen")]
     bindings(&out_dir);
 
     println!("cargo:rustc-link-lib=raw");
@@ -116,10 +116,24 @@
     println!("cargo:rustc-link-lib=static=raw");
 }
 
-#[cfg(feature = "bindgen")]
+//#[cfg(feature = "bindgen")]
 fn bindings(out_dir: &Path) {
+
+    let includedir;
+    #[cfg(not(target_os = "windows"))]
+    match pkg_config::get_variable("libraw", "includedir")
+    {
+        Ok(variable) => {
+            includedir = variable;
+        }
+        Err(err) => {
+            println!("cargo:warning={}", err);
+            std::process::exit(1);
+        }
+    }
+
     let bindings = bindgen::Builder::default()
-        .header("libraw/libraw/libraw.h")
+        .header(includedir + "/libraw/libraw.h")
         .use_core()
         .ctypes_prefix("libc")
         .generate_comments(true)
@@ -128,96 +142,96 @@
         .derive_eq(true)
         .size_t_is_usize(true)
         // these are never part of the API
-        .blacklist_function("_.*")
+        .blocklist_function("_.*")
         // consts creating duplications
-        .blacklist_item("FP_NAN")
-        .blacklist_item("FP_INFINITE")
-        .blacklist_item("FP_ZERO")
-        .blacklist_item("FP_SUBNORMAL")
-        .blacklist_item("FP_NORMAL")
+        .blocklist_item("FP_NAN")
+        .blocklist_item("FP_INFINITE")
+        .blocklist_item("FP_ZERO")
+        .blocklist_item("FP_SUBNORMAL")
+        .blocklist_item("FP_NORMAL")
         // Rust doesn't support long double, and bindgen can't skip it
         // https://github.com/rust-lang/rust-bindgen/issues/1549
-        .blacklist_function("acoshl")
-        .blacklist_function("acosl")
-        .blacklist_function("asinhl")
-        .blacklist_function("asinl")
-        .blacklist_function("atan2l")
-        .blacklist_function("atanhl")
-        .blacklist_function("atanl")
-        .blacklist_function("cbrtl")
-        .blacklist_function("ceill")
-        .blacklist_function("copysignl")
-        .blacklist_function("coshl")
-        .blacklist_function("cosl")
-        .blacklist_function("dreml")
-        .blacklist_function("ecvt_r")
-        .blacklist_function("erfcl")
-        .blacklist_function("erfl")
-        .blacklist_function("exp2l")
-        .blacklist_function("expl")
-        .blacklist_function("expm1l")
-        .blacklist_function("fabsl")
-        .blacklist_function("fcvt_r")
-        .blacklist_function("fdiml")
-        .blacklist_function("finitel")
-        .blacklist_function("floorl")
-        .blacklist_function("fmal")
-        .blacklist_function("fmaxl")
-        .blacklist_function("fminl")
-        .blacklist_function("fmodl")
-        .blacklist_function("frexpl")
-        .blacklist_function("gammal")
-        .blacklist_function("hypotl")
-        .blacklist_function("ilogbl")
-        .blacklist_function("isinfl")
-        .blacklist_function("isnanl")
-        .blacklist_function("j0l")
-        .blacklist_function("j1l")
-        .blacklist_function("jnl")
-        .blacklist_function("ldexpl")
-        .blacklist_function("lgammal")
-        .blacklist_function("lgammal_r")
-        .blacklist_function("llrintl")
-        .blacklist_function("llroundl")
-        .blacklist_function("log10l")
-        .blacklist_function("log1pl")
-        .blacklist_function("log2l")
-        .blacklist_function("logbl")
-        .blacklist_function("logl")
-        .blacklist_function("lrintl")
-        .blacklist_function("lroundl")
-        .blacklist_function("modfl")
-        .blacklist_function("nanl")
-        .blacklist_function("nearbyintl")
-        .blacklist_function("nextafterl")
-        .blacklist_function("nexttoward")
-        .blacklist_function("nexttowardf")
-        .blacklist_function("nexttowardl")
-        .blacklist_function("powl")
-        .blacklist_function("qecvt")
-        .blacklist_function("qecvt_r")
-        .blacklist_function("qfcvt")
-        .blacklist_function("qfcvt_r")
-        .blacklist_function("qgcvt")
-        .blacklist_function("remainderl")
-        .blacklist_function("remquol")
-        .blacklist_function("rintl")
-        .blacklist_function("roundl")
-        .blacklist_function("scalbl")
-        .blacklist_function("scalblnl")
-        .blacklist_function("scalbnl")
-        .blacklist_function("significandl")
-        .blacklist_function("sinhl")
-        .blacklist_function("sinl")
-        .blacklist_function("sqrtl")
-        .blacklist_function("strtold")
-        .blacklist_function("tanhl")
-        .blacklist_function("tanl")
-        .blacklist_function("tgammal")
-        .blacklist_function("truncl")
-        .blacklist_function("y0l")
-        .blacklist_function("y1l")
-        .blacklist_function("ynl")
+        .blocklist_function("acoshl")
+        .blocklist_function("acosl")
+        .blocklist_function("asinhl")
+        .blocklist_function("asinl")
+        .blocklist_function("atan2l")
+        .blocklist_function("atanhl")
+        .blocklist_function("atanl")
+        .blocklist_function("cbrtl")
+        .blocklist_function("ceill")
+        .blocklist_function("copysignl")
+        .blocklist_function("coshl")
+        .blocklist_function("cosl")
+        .blocklist_function("dreml")
+        .blocklist_function("ecvt_r")
+        .blocklist_function("erfcl")
+        .blocklist_function("erfl")
+        .blocklist_function("exp2l")
+        .blocklist_function("expl")
+        .blocklist_function("expm1l")
+        .blocklist_function("fabsl")
+        .blocklist_function("fcvt_r")
+        .blocklist_function("fdiml")
+        .blocklist_function("finitel")
+        .blocklist_function("floorl")
+        .blocklist_function("fmal")
+        .blocklist_function("fmaxl")
+        .blocklist_function("fminl")
+        .blocklist_function("fmodl")
+        .blocklist_function("frexpl")
+        .blocklist_function("gammal")
+        .blocklist_function("hypotl")
+        .blocklist_function("ilogbl")
+        .blocklist_function("isinfl")
+        .blocklist_function("isnanl")
+        .blocklist_function("j0l")
+        .blocklist_function("j1l")
+        .blocklist_function("jnl")
+        .blocklist_function("ldexpl")
+        .blocklist_function("lgammal")
+        .blocklist_function("lgammal_r")
+        .blocklist_function("llrintl")
+        .blocklist_function("llroundl")
+        .blocklist_function("log10l")
+        .blocklist_function("log1pl")
+        .blocklist_function("log2l")
+        .blocklist_function("logbl")
+        .blocklist_function("logl")
+        .blocklist_function("lrintl")
+        .blocklist_function("lroundl")
+        .blocklist_function("modfl")
+        .blocklist_function("nanl")
+        .blocklist_function("nearbyintl")
+        .blocklist_function("nextafterl")
+        .blocklist_function("nexttoward")
+        .blocklist_function("nexttowardf")
+        .blocklist_function("nexttowardl")
+        .blocklist_function("powl")
+        .blocklist_function("qecvt")
+        .blocklist_function("qecvt_r")
+        .blocklist_function("qfcvt")
+        .blocklist_function("qfcvt_r")
+        .blocklist_function("qgcvt")
+        .blocklist_function("remainderl")
+        .blocklist_function("remquol")
+        .blocklist_function("rintl")
+        .blocklist_function("roundl")
+        .blocklist_function("scalbl")
+        .blocklist_function("scalblnl")
+        .blocklist_function("scalbnl")
+        .blocklist_function("significandl")
+        .blocklist_function("sinhl")
+        .blocklist_function("sinl")
+        .blocklist_function("sqrtl")
+        .blocklist_function("strtold")
+        .blocklist_function("tanhl")
+        .blocklist_function("tanl")
+        .blocklist_function("tgammal")
+        .blocklist_function("truncl")
+        .blocklist_function("y0l")
+        .blocklist_function("y1l")
+        .blocklist_function("ynl")
         .generate()
         .expect("Unable to generate bindings");
 
--- a/src/lib.rs
+++ b/src/lib.rs
@@ -8,9 +8,9 @@
 )]
 #![no_std]
 
-#[cfg(feature = "bindgen")]
+//#[cfg(feature = "bindgen")]
 include!(concat!(env!("OUT_DIR"), "/bindings.rs"));
-#[cfg(not(feature = "bindgen"))]
+/*#[cfg(not(feature = "bindgen"))]
 mod bindings;
 #[cfg(not(feature = "bindgen"))]
-pub use bindings::*;
+pub use bindings::*;*/
