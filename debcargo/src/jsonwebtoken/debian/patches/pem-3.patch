This patch is based on the upstream commit described below, adapted for use
in the Debian package by Peter Michael Green.

Upstream made code changes when bumping pem from 1 to 2, but not when
bumping pem from 2 to 3.

commit 1bdfb9140a4718da397891b4eadd249ec8f2e8c6
Author: Edward Rudd <urkle@outoforder.cc>
Date:   Thu Jun 15 14:29:03 2023 -0400

    Update pem dependency to 2.x (#303)
    
    - updating this removes the duplicate base64 dependency as pem 1.x used base64 0.13 still

Index: jsonwebtoken/src/pem/decoder.rs
===================================================================
--- jsonwebtoken.orig/src/pem/decoder.rs
+++ jsonwebtoken/src/pem/decoder.rs
@@ -53,22 +53,21 @@ impl PemEncodedKey {
     pub fn new(input: &[u8]) -> Result<PemEncodedKey> {
         match pem::parse(input) {
             Ok(content) => {
-                let pem_contents = content.contents;
-                let asn1_content = match simple_asn1::from_der(pem_contents.as_slice()) {
+                let asn1_content = match simple_asn1::from_der(content.contents()) {
                     Ok(asn1) => asn1,
                     Err(_) => return Err(ErrorKind::InvalidKeyFormat.into()),
                 };
 
-                match content.tag.as_ref() {
+                match content.tag().as_ref() {
                     // This handles a PKCS#1 RSA Private key
                     "RSA PRIVATE KEY" => Ok(PemEncodedKey {
-                        content: pem_contents,
+                        content: content.into_contents(),
                         asn1: asn1_content,
                         pem_type: PemType::RsaPrivate,
                         standard: Standard::Pkcs1,
                     }),
                     "RSA PUBLIC KEY" => Ok(PemEncodedKey {
-                        content: pem_contents,
+                        content: content.into_contents(),
                         asn1: asn1_content,
                         pem_type: PemType::RsaPublic,
                         standard: Standard::Pkcs1,
@@ -107,7 +106,7 @@ impl PemEncodedKey {
                                     }
                                 };
                                 Ok(PemEncodedKey {
-                                    content: pem_contents,
+                                    content: content.into_contents(),
                                     asn1: asn1_content,
                                     pem_type,
                                     standard: Standard::Pkcs8,
Index: jsonwebtoken/Cargo.toml
===================================================================
--- jsonwebtoken.orig/Cargo.toml
+++ jsonwebtoken/Cargo.toml
@@ -43,7 +43,7 @@ harness = false
 version = "0.21.0"
 
 [dependencies.pem]
-version = "1"
+version = "3"
 optional = true
 
 [dependencies.ring]
