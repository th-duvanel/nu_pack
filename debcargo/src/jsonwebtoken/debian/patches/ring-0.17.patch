This patch is based on the upstream commit described below, adpated for use
in the Debian package by Peter Michael Green.

commit b7599eb51d2f075e41f3f647d860ba6e9a58eaef
Author: Kyle Huey <khuey@kylehuey.com>
Date:   Mon Oct 16 00:03:11 2023 -0700

    Upgrade ring. (#333)

Index: jsonwebtoken/src/crypto/ecdsa.rs
===================================================================
--- jsonwebtoken.orig/src/crypto/ecdsa.rs
+++ jsonwebtoken/src/crypto/ecdsa.rs
@@ -31,8 +31,8 @@ pub fn sign(
     key: &[u8],
     message: &[u8],
 ) -> Result<String> {
-    let signing_key = signature::EcdsaKeyPair::from_pkcs8(alg, key)?;
     let rng = rand::SystemRandom::new();
+    let signing_key = signature::EcdsaKeyPair::from_pkcs8(alg, key, &rng)?;
     let out = signing_key.sign(&rng, message)?;
     Ok(b64_encode(out))
 }
Index: jsonwebtoken/src/crypto/rsa.rs
===================================================================
--- jsonwebtoken.orig/src/crypto/rsa.rs
+++ jsonwebtoken/src/crypto/rsa.rs
@@ -39,9 +39,9 @@ pub(crate) fn sign(
     message: &[u8],
 ) -> Result<String> {
     let key_pair = signature::RsaKeyPair::from_der(key)
-        .map_err(|e| ErrorKind::InvalidRsaKey(e.description_()))?;
+        .map_err(|e| ErrorKind::InvalidRsaKey(e.to_string()))?;
 
-    let mut signature = vec![0; key_pair.public_modulus_len()];
+    let mut signature = vec![0; key_pair.public().modulus_len()];
     let rng = rand::SystemRandom::new();
     key_pair.sign(alg, &rng, message, &mut signature).map_err(|_| ErrorKind::RsaFailedSigning)?;
 
Index: jsonwebtoken/src/errors.rs
===================================================================
--- jsonwebtoken.orig/src/errors.rs
+++ jsonwebtoken/src/errors.rs
@@ -42,7 +42,7 @@ pub enum ErrorKind {
     /// When the secret given is not a valid ECDSA key
     InvalidEcdsaKey,
     /// When the secret given is not a valid RSA key
-    InvalidRsaKey(&'static str),
+    InvalidRsaKey(String),
     /// We could not sign with the given key
     RsaFailedSigning,
     /// When the algorithm from string doesn't match the one passed to `from_str`
Index: jsonwebtoken/Cargo.toml
===================================================================
--- jsonwebtoken.orig/Cargo.toml
+++ jsonwebtoken/Cargo.toml
@@ -47,7 +47,7 @@ version = "1"
 optional = true
 
 [dependencies.ring]
-version = "0.16.5"
+version = "0.17.3"
 features = ["std"]
 
 [dependencies.serde]
