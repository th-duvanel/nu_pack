--- a/Cargo.toml
+++ b/Cargo.toml
@@ -44,10 +44,10 @@
 [dependencies.const_format_proc_macros]
 version = "=0.2.29"
 
-[dependencies.konst]
-version = "0.2.13"
-optional = true
-default-features = false
+#[dependencies.konst]
+#version = "0.2.13"
+#optional = true
+#default-features = false
 
 [dev-dependencies.arrayvec]
 version = "0.5.1"
@@ -63,33 +63,33 @@
 __only_new_tests = ["__test"]
 __test = []
 all = [
-    "fmt",
+#    "fmt",
     "derive",
-    "rust_1_64",
+#    "rust_1_64",
     "assert",
 ]
 assert = ["assertc"]
 assertc = [
-    "fmt",
+#    "fmt",
     "assertcp",
 ]
 assertcp = ["rust_1_51"]
 const_generics = ["rust_1_51"]
-constant_time_as_str = ["fmt"]
+#constant_time_as_str = ["fmt"]
 default = []
 derive = [
-    "fmt",
+#    "fmt",
     "const_format_proc_macros/derive",
 ]
-fmt = ["rust_1_64"]
-more_str_macros = ["rust_1_64"]
+#fmt = ["rust_1_64"]
+#more_str_macros = ["rust_1_64"]
 nightly_const_generics = ["const_generics"]
 rust_1_51 = []
-rust_1_64 = [
-    "rust_1_51",
-    "konst",
-    "konst/rust_1_64",
-]
+#rust_1_64 = [
+#    "rust_1_51",
+#    "konst",
+#    "konst/rust_1_64",
+#]
 
 [badges.travis-ci]
 repository = "rodrimati1992/const_format_crates/"
--- a/src/__str_methods.rs
+++ b/src/__str_methods.rs
@@ -13,11 +13,11 @@
 mod str_indexing;
 pub use str_indexing::{IndexValidity, StrIndexArgs, StrIndexArgsConv};
 
-#[cfg(feature = "rust_1_64")]
+/*#[cfg(feature = "rust_1_64")]
 mod str_split;
 
 #[cfg(feature = "rust_1_64")]
-pub use str_split::{SplitInput, SplitInputConv};
+pub use str_split::{SplitInput, SplitInputConv};*/
 
 #[cfg(feature = "rust_1_51")]
 mod pattern;
--- a/src/macros/str_methods.rs
+++ b/src/macros/str_methods.rs
@@ -502,7 +502,7 @@
     }};
 }
 
-/// Splits `$string` (a `&'static str` constant) with `$splitter`,
+/*/ Splits `$string` (a `&'static str` constant) with `$splitter`,
 /// returning an array of `&'static str`s.
 ///
 /// # Signature
@@ -566,4 +566,4 @@
             OB
         }
     }};
-}
+}*/
