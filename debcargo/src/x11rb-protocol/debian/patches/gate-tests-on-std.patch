diff --git a/src/connect.rs b/src/connect.rs
index d8cfc20..859b3d5 100644
--- a/src/connect.rs
+++ b/src/connect.rs
@@ -44,7 +44,7 @@ use core::fmt;
 /// the address of the connection, and the display. You can use the `Connect`
 /// to establish an X11 connection like so:
 ///
-/// ```rust,no_run
+/// ```rust,ignore
 /// # use x11rb_protocol::connect::Connect;
 /// # use x11rb_protocol::xauth::Family;
 /// # use std::{error::Error, io::prelude::*};
@@ -263,7 +263,7 @@ impl TryFrom<Connect> for Setup {
 }
 
 #[cfg(test)]
-#[cfg(feature = "extra-traits")]
+#[cfg(all(feature = "extra-traits", feature = "std"))]
 mod tests {
     use super::Connect;
     use crate::errors::ConnectError;
diff --git a/src/packet_reader.rs b/src/packet_reader.rs
index 5c1ee06..40a7af5 100644
--- a/src/packet_reader.rs
+++ b/src/packet_reader.rs
@@ -125,7 +125,7 @@ fn extra_length(buffer: &[u8]) -> usize {
     }
 }
 
-#[cfg(test)]
+#[cfg(all(test, feature = "std"))]
 mod tests {
     use super::PacketReader;
     use alloc::{vec, vec::Vec};
diff --git a/src/parse_display/connect_instruction.rs b/src/parse_display/connect_instruction.rs
index cd3f6a8..5c9026c 100644
--- a/src/parse_display/connect_instruction.rs
+++ b/src/parse_display/connect_instruction.rs
@@ -54,7 +54,7 @@ pub(super) fn connect_addresses(p: &ParsedDisplay) -> impl Iterator<Item = Conne
     targets.into_iter()
 }
 
-#[cfg(test)]
+#[cfg(all(test, feature = "std"))]
 mod tests {
     // make sure iterator properties are clean
     use super::{super::parse_display, ConnectAddress};
diff --git a/src/parse_display/mod.rs b/src/parse_display/mod.rs
index f82feea..1160d2a 100644
--- a/src/parse_display/mod.rs
+++ b/src/parse_display/mod.rs
@@ -141,7 +141,7 @@ fn parse_display_direct_path(
     ))
 }
 
-#[cfg(test)]
+#[cfg(all(test, feature = "std"))]
 mod test {
     use super::{
         parse_display, parse_display_with_file_exists_callback, DisplayParsingError, ParsedDisplay,
diff --git a/src/test.rs b/src/test.rs
index 2e26e38..510fd14 100644
--- a/src/test.rs
+++ b/src/test.rs
@@ -1,3 +1,4 @@
+#![cfg(feature = "std")]
 use std::borrow::Cow;
 
 use crate::protocol::{get_request_name, request_name};
diff --git a/src/x11_utils.rs b/src/x11_utils.rs
index 7e156b1..9f2bf82 100644
--- a/src/x11_utils.rs
+++ b/src/x11_utils.rs
@@ -388,7 +388,7 @@ implement_serialize!(i64: 8);
 forward_float!(f32: u32);
 forward_float!(f64: u64);
 
-#[cfg(test)]
+#[cfg(all(test, feature = "std"))]
 mod float_tests {
     use super::{Serialize, TryParse};
 
