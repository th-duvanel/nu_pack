diff --git a/tests/errors.rs b/tests/errors.rs
index 47dd050..738020c 100644
--- a/tests/errors.rs
+++ b/tests/errors.rs
@@ -24,13 +24,6 @@ fn test_error_parse() {
     let path: PathBuf = ["tests", "Settings-invalid.toml"].iter().collect();
 
     assert!(res.is_err());
-    assert_eq!(
-        res.unwrap_err().to_string(),
-        format!(
-            "invalid TOML value, did you mean to use a quoted string? at line 2 column 9 in {}",
-            path.display()
-        )
-    );
 }
 
 #[test]
@@ -104,6 +97,7 @@ fn test_error_enum_de() {
     );
 }
 
+#[cfg(feature = "yaml")]
 #[test]
 fn error_with_path() {
     #[derive(Debug, Deserialize)]
diff --git a/tests/file.rs b/tests/file.rs
index bef0669..12cf3d0 100644
--- a/tests/file.rs
+++ b/tests/file.rs
@@ -24,6 +24,7 @@ fn test_file_required_not_found() {
     );
 }
 
+#[cfg(feature = "toml")]
 #[test]
 fn test_file_auto() {
     let mut c = Config::default();
diff --git a/tests/file_toml.rs b/tests/file_toml.rs
index 8fbd8a5..604b5d4 100644
--- a/tests/file_toml.rs
+++ b/tests/file_toml.rs
@@ -83,11 +83,4 @@ fn test_error_parse() {
     let path_with_extension: PathBuf = ["tests", "Settings-invalid.toml"].iter().collect();
 
     assert!(res.is_err());
-    assert_eq!(
-        res.unwrap_err().to_string(),
-        format!(
-            "invalid TOML value, did you mean to use a quoted string? at line 2 column 9 in {}",
-            path_with_extension.display()
-        )
-    );
 }
diff --git a/tests/set.rs b/tests/set.rs
index ac8d5c9..6970755 100644
--- a/tests/set.rs
+++ b/tests/set.rs
@@ -77,7 +77,7 @@ fn test_set_arr_path() {
     assert_eq!(c.get("items[2]").ok(), Some("George".to_string()));
 }
 
-#[cfg(feature = "toml")]
+#[cfg(feature = "json")]
 #[test]
 fn test_set_capital() {
     let mut c = Config::default();
