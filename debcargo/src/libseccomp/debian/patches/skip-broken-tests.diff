--- a/Cargo.toml
+++ b/Cargo.toml
@@ -30,6 +30,9 @@
 license = "MIT OR Apache-2.0"
 repository = "https://github.com/libseccomp-rs/libseccomp-rs"
 
+[lib]
+doctest = false
+
 [package.metadata.docs.rs]
 rustc-args = [
     "--cfg",
--- a/tests/notify.rs
+++ b/tests/notify.rs
@@ -126,6 +126,7 @@
 }
 
 #[test]
+#[cfg(not(arch = "arm"))]
 fn test_error() {
     skip_if_not_supported!();
 
--- a/tests/tests.rs
+++ b/tests/tests.rs
@@ -248,6 +248,7 @@
 }
 
 #[test]
+#[cfg(not(target_endian = "big"))]
 fn test_arch_functions() {
     let mut ctx = ScmpFilterContext::new_filter(ScmpAction::Allow).unwrap();
     ctx.add_arch(ScmpArch::X86).unwrap();
@@ -260,6 +261,7 @@
 }
 
 #[test]
+#[cfg(not(target_endian = "big"))]
 fn test_merge_filters() {
     let mut ctx1 = ScmpFilterContext::new_filter(ScmpAction::Allow).unwrap();
     let mut ctx2 = ScmpFilterContext::new_filter(ScmpAction::Allow).unwrap();

--- a/src/api.rs
+++ b/src/api.rs
@@ -129,6 +129,7 @@
     use super::*;
 
     #[test]
+    #[cfg(not(arch= "loong64"))]
     fn test_ensure_supported_api() {
         assert!(ensure_supported_api("test", 3, ScmpVersion::from((2, 4, 0))).is_ok());
         assert!(ensure_supported_api("test", 100, ScmpVersion::from((2, 4, 0))).is_err());

