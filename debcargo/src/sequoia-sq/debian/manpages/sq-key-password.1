.TH SQ 1 0.34.0 "Sequoia PGP" "User Commands"
.SH NAME
sq key password \- Change password protecting secrets
.SH SYNOPSIS
.br
\fBsq key password\fR [\fIOPTIONS\fR] \fIFILE\fR
.SH DESCRIPTION
Change password protecting secrets.
.PP
Secret key material in keys can be protected by a password.  This
subcommand changes or clears this encryption password.
.PP
To emit the key with unencrypted secrets, either use `\-\-clear` or
supply a zero\-length password when prompted for the new password.
.PP


.SH OPTIONS
.SS "Subcommand options"
.TP
\fB\-B\fR, \fB\-\-binary\fR
Emit binary data
.TP
\fB\-\-clear\fR
Emit a key with unencrypted secrets
.TP
\fB\-\-new\-password\-file\fR=\fINEW_PASSWORD_FILE\fR
File containing password to encrypt key
.IP
Note that the entire key file will be used as the password, including surrounding whitespace like for example a trailing newline
.TP
\fB\-o\fR, \fB\-\-output\fR=\fIFILE\fR
Write to FILE or stdout if omitted
.TP
\fB\-\-old\-password\-file\fR=\fIOLD_PASSWORD_FILE\fR
File containing password to decrypt key
.IP
Note that the entire key file will be used as the password, including surrounding whitespace like for example a trailing newline
.TP
 \fIFILE\fR
Read from FILE or stdin if omitted
.SS "Global options"
See \fBsq\fR(1) for a description of the global options.
.SH EXAMPLES
.PP

.PP
First, generate a key
.PP
.nf
.RS
sq key generate \-\-userid '<juliet@example.org>' \\
.RE
.RS
.RS
\-\-output juliet.key.pgp
.RE
.RE
.PP
.fi

.PP
Then, encrypt the secrets in the key with a password.
.PP
.nf
.RS
sq key password < juliet.key.pgp > juliet.encrypted_key.pgp
.RE
.PP
.fi

.PP
And remove the password again.
.PP
.nf
.RS
sq key password \-\-clear < juliet.encrypted_key.pgp \\
.RE
.RS
.RS
> juliet.decrypted_key.pgp
.RE
.RE
.fi
.SH "SEE ALSO"
.nh
\fBsq\fR(1), \fBsq\-key\fR(1).
.hy
.PP
For the full documentation see <https://book.sequoia\-pgp.org>.
.SH VERSION
0.34.0 (sequoia\-openpgp 1.19.0)
