Index: faster-hex/src/lib.rs
===================================================================
--- faster-hex.orig/src/lib.rs
+++ faster-hex/src/lib.rs
@@ -129,7 +129,9 @@ unsafe fn avx2_support_no_cache_x86() ->
 mod tests {
     use crate::decode::{hex_decode, hex_decode_with_case, CheckCase};
     use crate::encode::{hex_encode, hex_string};
-    use crate::{hex_encode_upper, hex_string_upper, vectorization_support, Vectorization};
+    use crate::{hex_encode_upper, vectorization_support, Vectorization};
+    #[cfg(feature = "alloc")]
+    use crate::hex_string_upper;
     use proptest::proptest;
 
     #[test]
@@ -161,6 +163,7 @@ mod tests {
             assert_eq!(hex_string, hex::encode(s));
         }
 
+        #[cfg(feature = "alloc")]
         {
             let encode_upper = &*hex_encode_upper(s.as_bytes(), &mut buffer).unwrap();
 
@@ -192,6 +195,7 @@ mod tests {
 
             assert_eq!(&dst[..], s.as_bytes());
         }
+        #[cfg(feature = "alloc")]
         {
             let mut dst = Vec::with_capacity(len);
             dst.resize(len, 0);
