--- rust-pathfinder-simd-0.5.2.orig/src/x86/mod.rs
+++ rust-pathfinder-simd-0.5.2/src/x86/mod.rs
@@ -13,13 +13,13 @@ use std::fmt::{self, Debug, Formatter};
 use std::mem;
 use std::ops::{Add, BitAnd, BitOr, BitXor, Div, Index, IndexMut, Mul, Not, Shr, Sub};
 
-#[cfg(target_pointer_width = "32")]
+#[cfg(target_arch = "x86")]
 use std::arch::x86::{__m128, __m128i};
-#[cfg(target_pointer_width = "32")]
+#[cfg(target_arch = "x86")]
 use std::arch::x86;
-#[cfg(target_pointer_width = "64")]
+#[cfg(target_arch = "x86_64")]
 use std::arch::x86_64::{__m128, __m128i};
-#[cfg(target_pointer_width = "64")]
+#[cfg(target_arch = "x86_64")]
 use std::arch::x86_64 as x86;
 
 mod swizzle_f32x4;
--- rust-pathfinder-simd-0.5.2.orig/src/x86/swizzle_f32x4.rs
+++ rust-pathfinder-simd-0.5.2/src/x86/swizzle_f32x4.rs
@@ -10,9 +10,9 @@
 
 use crate::x86::F32x4;
 
-#[cfg(target_pointer_width = "32")]
+#[cfg(target_arch= "x86")]
 use std::arch::x86;
-#[cfg(target_pointer_width = "64")]
+#[cfg(target_arch = "x86_64")]
 use std::arch::x86_64 as x86;
 
 impl F32x4 {
--- rust-pathfinder-simd-0.5.2.orig/src/x86/swizzle_i32x4.rs
+++ rust-pathfinder-simd-0.5.2/src/x86/swizzle_i32x4.rs
@@ -10,9 +10,9 @@
 
 use crate::x86::I32x4;
 
-#[cfg(target_pointer_width = "32")]
+#[cfg(target_arch = "x86")]
 use std::arch::x86;
-#[cfg(target_pointer_width = "64")]
+#[cfg(target_arch = "x86_64")]
 use std::arch::x86_64 as x86;
 
 impl I32x4 {
