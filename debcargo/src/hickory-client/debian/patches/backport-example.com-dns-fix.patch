Index: hickory-client/README.md
===================================================================
--- hickory-client.orig/README.md
+++ hickory-client/README.md
@@ -50,7 +50,7 @@ let answers: &[Record] = response.answer
 //  In order to access it we need to first check what type of record it is
 //  In this case we are interested in A, IPv4 address
 if let Some(RData::A(ref ip)) = answers[0].data() {
-    assert_eq!(*ip, Ipv4Addr::new(93, 184, 216, 34))
+    assert_eq!(*ip, Ipv4Addr::new(93, 184, 215, 14))
 } else {
     assert!(false, "unexpected result")
 }
Index: hickory-client/src/client/async_client.rs
===================================================================
--- hickory-client.orig/src/client/async_client.rs
+++ hickory-client/src/client/async_client.rs
@@ -1118,7 +1118,7 @@ mod tests {
 
         // validate it's what we expected
         if let Some(RData::A(addr)) = message_returned.answers()[0].data() {
-            assert_eq!(*addr, A::new(93, 184, 216, 34));
+            assert_eq!(*addr, A::new(93, 184, 215, 14));
         }
 
         let message_parsed = Message::from_vec(&buffer)
@@ -1126,7 +1126,7 @@ mod tests {
 
         // validate it's what we expected
         if let Some(RData::A(addr)) = message_parsed.answers()[0].data() {
-            assert_eq!(*addr, A::new(93, 184, 216, 34));
+            assert_eq!(*addr, A::new(93, 184, 215, 14));
         }
     }
 }
Index: hickory-client/src/lib.rs
===================================================================
--- hickory-client.orig/src/lib.rs
+++ hickory-client/src/lib.rs
@@ -129,7 +129,7 @@
 //! //  In order to access it we need to first check what type of record it is
 //! //  In this case we are interested in A, IPv4 address
 //! if let Some(RData::A(ref ip)) = answers[0].data() {
-//!     assert_eq!(*ip, A::new(93, 184, 216, 34))
+//!     assert_eq!(*ip, A::new(93, 184, 215, 14))
 //! } else {
 //!     assert!(false, "unexpected result")
 //! }
@@ -264,7 +264,7 @@
 //!
 //!     // validate it's what we expected
 //!     if let Some(RData::A(addr)) = response.answers()[0].data() {
-//!         assert_eq!(*addr, A::new(93, 184, 216, 34));
+//!         assert_eq!(*addr, A::new(93, 184, 215, 14));
 //!     }
 //! }
 //! ```
