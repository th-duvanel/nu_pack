Index: rcgen/tests/webpki.rs
===================================================================
--- rcgen.orig/tests/webpki.rs
+++ rcgen/tests/webpki.rs
@@ -105,6 +105,7 @@ fn check_cert_ca<'a, 'b>(
 }
 
 #[test]
+#[cfg(feature = "pem")]
 fn test_webpki() {
 	let params = util::default_params();
 	let cert = Certificate::from_params(params).unwrap();
@@ -117,6 +118,7 @@ fn test_webpki() {
 }
 
 #[test]
+#[cfg(feature = "pem")]
 fn test_webpki_256() {
 	let mut params = util::default_params();
 	params.alg = &rcgen::PKCS_ECDSA_P256_SHA256;
@@ -131,6 +133,7 @@ fn test_webpki_256() {
 }
 
 #[test]
+#[cfg(feature = "pem")]
 fn test_webpki_384() {
 	let mut params = util::default_params();
 	params.alg = &rcgen::PKCS_ECDSA_P384_SHA384;
@@ -145,6 +148,7 @@ fn test_webpki_384() {
 }
 
 #[test]
+#[cfg(feature = "pem")]
 fn test_webpki_25519() {
 	let mut params = util::default_params();
 	params.alg = &rcgen::PKCS_ED25519;
@@ -159,6 +163,7 @@ fn test_webpki_25519() {
 
 #[cfg(feature = "pem")]
 #[test]
+#[cfg(feature = "pem")]
 fn test_webpki_25519_v1_given() {
 	let mut params = util::default_params();
 	params.alg = &rcgen::PKCS_ED25519;
@@ -176,6 +181,7 @@ fn test_webpki_25519_v1_given() {
 
 #[cfg(feature = "pem")]
 #[test]
+#[cfg(feature = "pem")]
 fn test_webpki_25519_v2_given() {
 	let mut params = util::default_params();
 	params.alg = &rcgen::PKCS_ED25519;
@@ -193,6 +199,7 @@ fn test_webpki_25519_v2_given() {
 
 #[cfg(feature = "pem")]
 #[test]
+#[cfg(feature = "pem")]
 fn test_webpki_rsa_given() {
 	let mut params = util::default_params();
 	params.alg = &rcgen::PKCS_RSA_SHA256;
@@ -215,6 +222,7 @@ fn test_webpki_rsa_given() {
 
 #[cfg(feature = "pem")]
 #[test]
+#[cfg(feature = "pem")]
 fn test_webpki_rsa_combinations_given() {
 	let configs: &[(_, _, &'static dyn signature::RsaEncoding)] = &[
 		(
@@ -313,6 +321,7 @@ fn test_webpki_separate_ca_with_other_si
 }
 
 #[test]
+#[cfg(feature = "pem")]
 fn from_remote() {
 	struct Remote(EcdsaKeyPair);
 
@@ -515,6 +524,7 @@ fn test_certificate_from_csr() {
 }
 
 #[test]
+#[cfg(feature = "pem")]
 fn test_webpki_serial_number() {
 	let mut params = util::default_params();
 	params.serial_number = Some(vec![0, 1, 2].into());
Index: rcgen/examples/rsa-irc-openssl.rs
===================================================================
--- rcgen.orig/examples/rsa-irc-openssl.rs
+++ rcgen/examples/rsa-irc-openssl.rs
@@ -1,3 +1,4 @@
+#![cfg(feature = "pem")]
 #![allow(clippy::complexity, clippy::style, clippy::pedantic)]
 
 fn main() -> Result<(), Box<dyn std::error::Error>> {
Index: rcgen/examples/rsa-irc.rs
===================================================================
--- rcgen.orig/examples/rsa-irc.rs
+++ rcgen/examples/rsa-irc.rs
@@ -1,3 +1,4 @@
+#![cfg(feature = "pem")]
 #![allow(clippy::complexity, clippy::style, clippy::pedantic)]
 
 fn main() -> Result<(), Box<dyn std::error::Error>> {
