Index: thiserror-core/tests/test_display.rs
===================================================================
--- thiserror-core.orig/tests/test_display.rs
+++ thiserror-core/tests/test_display.rs
@@ -1,5 +1,5 @@
 use std::fmt::{self, Display};
-use thiserror::Error;
+use thiserror_core::Error;
 
 fn assert<T: Display>(expected: &str, value: T) {
     assert_eq!(expected, value.to_string());
Index: thiserror-core/tests/test_backtrace.rs
===================================================================
--- thiserror-core.orig/tests/test_backtrace.rs
+++ thiserror-core/tests/test_backtrace.rs
@@ -3,7 +3,7 @@
     feature(error_generic_member_access, provide_any)
 )]
 
-use thiserror::Error;
+use thiserror_core::Error;
 
 #[derive(Error, Debug)]
 #[error("...")]
@@ -23,7 +23,7 @@ pub mod structs {
     use std::backtrace::Backtrace;
     use std::error::Error;
     use std::sync::Arc;
-    use thiserror::Error;
+    use thiserror_core::Error;
 
     #[derive(Error, Debug)]
     #[error("...")]
@@ -176,7 +176,7 @@ pub mod enums {
     use std::any;
     use std::backtrace::Backtrace;
     use std::sync::Arc;
-    use thiserror::Error;
+    use thiserror_core::Error;
 
     #[derive(Error, Debug)]
     pub enum PlainBacktrace {
Index: thiserror-core/tests/test_deprecated.rs
===================================================================
--- thiserror-core.orig/tests/test_deprecated.rs
+++ thiserror-core/tests/test_deprecated.rs
@@ -1,6 +1,6 @@
 #![deny(deprecated, clippy::all, clippy::pedantic)]
 
-use thiserror::Error;
+use thiserror_core::Error;
 
 #[derive(Error, Debug)]
 pub enum Error {
Index: thiserror-core/tests/test_expr.rs
===================================================================
--- thiserror-core.orig/tests/test_expr.rs
+++ thiserror-core/tests/test_expr.rs
@@ -1,7 +1,7 @@
 #![allow(clippy::iter_cloned_collect, clippy::option_if_let_else)]
 
 use std::fmt::Display;
-use thiserror::Error;
+use thiserror_core::Error;
 
 // Some of the elaborate cases from the rcc codebase, which is a C compiler in
 // Rust. https://github.com/jyn514/rcc/blob/0.8.0/src/data/error.rs
Index: thiserror-core/tests/test_from.rs
===================================================================
--- thiserror-core.orig/tests/test_from.rs
+++ thiserror-core/tests/test_from.rs
@@ -1,7 +1,7 @@
 #![allow(clippy::extra_unused_type_parameters)]
 
 use std::io;
-use thiserror::Error;
+use thiserror_core::Error;
 
 #[derive(Error, Debug)]
 #[error("...")]
Index: thiserror-core/tests/test_generics.rs
===================================================================
--- thiserror-core.orig/tests/test_generics.rs
+++ thiserror-core/tests/test_generics.rs
@@ -1,7 +1,7 @@
 #![allow(clippy::needless_late_init)]
 
 use std::fmt::{self, Debug, Display};
-use thiserror::Error;
+use thiserror_core::Error;
 
 pub struct NoFormat;
 
Index: thiserror-core/tests/test_lints.rs
===================================================================
--- thiserror-core.orig/tests/test_lints.rs
+++ thiserror-core/tests/test_lints.rs
@@ -1,4 +1,4 @@
-use thiserror::Error;
+use thiserror_core::Error;
 
 pub use std::error::Error;
 
Index: thiserror-core/tests/test_transparent.rs
===================================================================
--- thiserror-core.orig/tests/test_transparent.rs
+++ thiserror-core/tests/test_transparent.rs
@@ -1,7 +1,7 @@
 use anyhow::anyhow;
 use std::error::Error as _;
 use std::io;
-use thiserror::Error;
+use thiserror_core::Error;
 
 #[test]
 fn test_transparent_struct() {
