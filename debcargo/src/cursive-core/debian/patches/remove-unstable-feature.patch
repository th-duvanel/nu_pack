diff --git a/src/lib.rs b/src/lib.rs
index 976e0cf..4e7056c 100644
--- a/src/lib.rs
+++ b/src/lib.rs
@@ -8,7 +8,6 @@
 //!
 //! [`cursive`]: https://docs.rs/cursive
 #![deny(missing_docs)]
-#![cfg_attr(feature = "doc-cfg", feature(doc_cfg))]
 
 macro_rules! new_default(
     ($c:ident<$t:ident>) => {
diff --git a/src/theme/mod.rs b/src/theme/mod.rs
index 7a06f1a..edbb0cb 100644
--- a/src/theme/mod.rs
+++ b/src/theme/mod.rs
@@ -242,7 +242,6 @@ impl Default for Theme {
 
 impl Theme {
     #[cfg(feature = "toml")]
-    #[cfg_attr(feature = "doc-cfg", doc(cfg(feature = "toml")))]
     fn load_toml(&mut self, table: &toml::value::Table) {
         if let Some(&toml::Value::Boolean(shadow)) = table.get("shadow") {
             self.shadow = shadow;
@@ -265,13 +264,11 @@ pub enum Error {
     Io(io::Error),
 
     #[cfg(feature = "toml")]
-    #[cfg_attr(feature = "doc-cfg", doc(cfg(feature = "toml")))]
     /// An error occured when parsing the toml content.
     Parse(toml::de::Error),
 }
 
 #[cfg(feature = "toml")]
-#[cfg_attr(feature = "doc-cfg", doc(cfg(feature = "toml")))]
 impl From<io::Error> for Error {
     fn from(err: io::Error) -> Self {
         Error::Io(err)
@@ -279,7 +276,6 @@ impl From<io::Error> for Error {
 }
 
 #[cfg(feature = "toml")]
-#[cfg_attr(feature = "doc-cfg", doc(cfg(feature = "toml")))]
 impl From<toml::de::Error> for Error {
     fn from(err: toml::de::Error) -> Self {
         Error::Parse(err)
@@ -290,7 +286,6 @@ impl From<toml::de::Error> for Error {
 ///
 /// Must have the `toml` feature enabled.
 #[cfg(feature = "toml")]
-#[cfg_attr(feature = "doc-cfg", doc(cfg(feature = "toml")))]
 pub fn load_theme_file<P: AsRef<Path>>(filename: P) -> Result<Theme, Error> {
     let content = {
         let mut content = String::new();
@@ -306,7 +301,6 @@ pub fn load_theme_file<P: AsRef<Path>>(filename: P) -> Result<Theme, Error> {
 ///
 /// Must have the `toml` feature enabled.
 #[cfg(feature = "toml")]
-#[cfg_attr(feature = "doc-cfg", doc(cfg(feature = "toml")))]
 pub fn load_toml(content: &str) -> Result<Theme, Error> {
     let table = toml::de::from_str(content)?;
 
diff --git a/src/utils/markup/markdown.rs b/src/utils/markup/markdown.rs
index 6f3ce4a..f977343 100644
--- a/src/utils/markup/markdown.rs
+++ b/src/utils/markup/markdown.rs
@@ -2,7 +2,6 @@
 //!
 //! Needs the `markdown` feature to be enabled.
 #![cfg(feature = "markdown")]
-#![cfg_attr(feature = "doc-cfg", doc(cfg(feature = "markdown")))]
 
 use std::borrow::Cow;
 
@@ -30,7 +29,7 @@ pub struct Parser<'a> {
     first: bool,
     stack: Vec<Style>,
     input: &'a str,
-    parser: pulldown_cmark::Parser<'a, 'a>,
+    parser: pulldown_cmark::Parser<'a>,
 }
 
 impl<'a> Parser<'a> {
