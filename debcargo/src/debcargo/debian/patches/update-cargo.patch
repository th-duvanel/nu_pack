Index: debcargo/Cargo.toml
===================================================================
--- debcargo.orig/Cargo.toml
+++ debcargo/Cargo.toml
@@ -31,7 +31,7 @@ version = "0.12"
 version = "1.0"
 
 [dependencies.cargo]
-version = "0.63"
+version = "0.70"
 
 [dependencies.chrono]
 version = "0.4"
@@ -54,7 +54,7 @@ version = "0.2"
 version = "1"
 
 [dependencies.git2]
-version = "0.14"
+version = "0.16"
 
 [dependencies.glob]
 version = "0.3"
@@ -87,7 +87,7 @@ version = "3"
 version = "0.16"
 
 [dependencies.toml]
-version = "0.5"
+version = "0.7"
 
 [dependencies.walkdir]
 version = "2"
Index: debcargo/src/crates.rs
===================================================================
--- debcargo.orig/src/crates.rs
+++ debcargo/src/crates.rs
@@ -60,7 +60,7 @@ fn hash<H: Hash>(hashable: &H) -> u64 {
 }
 
 fn fetch_candidates(registry: &mut PackageRegistry, dep: &Dependency) -> Result<Vec<Summary>> {
-    let mut summaries = match registry.query_vec(dep, false) {
+    let mut summaries = match registry.query_vec(dep, cargo::core::QueryKind::Exact) {
         std::task::Poll::Ready(res) => res?,
         std::task::Poll::Pending => {
             registry.block_until_ready()?;
@@ -125,7 +125,7 @@ impl CrateInfo {
                     let dep = Dependency::parse(crate_name, None, source_id)?;
                     let mut package_id: Option<PackageId> = None;
                     loop {
-                        match source.query(&dep, &mut |p| package_id = Some(p.package_id())) {
+                        match source.query(&dep, cargo::core::QueryKind::Exact, &mut |p| package_id = Some(p.package_id())) {
                             std::task::Poll::Ready(res) => {
                                 res?;
                                 break;
