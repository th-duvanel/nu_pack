diff --git a/src/enc/test.rs b/src/enc/test.rs
index fb2a5c2..0dbd91b 100755
--- a/src/enc/test.rs
+++ b/src/enc/test.rs
@@ -241,6 +241,7 @@ fn oneshot(input: &[u8],
   return oneshot_decompress(&mut compressed[..available_in], output);
 }
 
+#[cfg(not(all(target_arch = "arm", target_pointer_width = "32")))]
 #[test]
 fn test_roundtrip_10x10y() {
   const BUFFER_SIZE: usize = 128;
@@ -304,46 +305,56 @@ macro_rules! test_roundtrip_file {
   }};
 }
 
+#[cfg(not(all(target_arch = "arm", target_pointer_width = "32")))]
 #[test]
 fn test_roundtrip_64x() {
   test_roundtrip_file!(include_bytes!("../../testdata/64x"), 72, 9, 10, false, 3, 2);
 }
+#[cfg(not(all(target_arch = "arm", target_pointer_width = "32")))]
 #[test]
 fn test_roundtrip_ukkonooa() {
   test_roundtrip_file!(include_bytes!("../../testdata/ukkonooa"), 82, 9, 10, true, 3, 2);
 }
+#[cfg(not(all(target_arch = "arm", target_pointer_width = "32")))]
 #[test]
 fn test_roundtrip_backward65536() {
   test_roundtrip_file!(include_bytes!("../../testdata/backward65536"), 72000, 9, 10, false, 3, 2);
 }
+#[cfg(not(all(target_arch = "arm", target_pointer_width = "32")))]
 #[test]
 fn test_roundtrip_aaabaaaa() {
   test_roundtrip_file!(include_bytes!("../../testdata/aaabaaaa"), 72000, 9, 10, true, 3, 2);
 }
+#[cfg(not(all(target_arch = "arm", target_pointer_width = "32")))]
 #[test]
 fn test_roundtrip_monkey() {
   test_roundtrip_file!(include_bytes!("../../testdata/monkey"), 72000, 9, 10, false, 16, 15);
 }
+#[cfg(not(all(target_arch = "arm", target_pointer_width = "32")))]
 #[test]
 fn test_roundtrip_quickfox_repeated() {
   test_roundtrip_file!(include_bytes!("../../testdata/quickfox_repeated"), 16384, 9, 10, true, 257, 255);
 }
 
+#[cfg(not(all(target_arch = "arm", target_pointer_width = "32")))]
 #[test]
 fn test_roundtrip_asyoulik() {
   test_roundtrip_file!(include_bytes!("../../testdata/asyoulik.txt"), 64384, 9, 15, false, 513, 511);
 }
 
+#[cfg(not(all(target_arch = "arm", target_pointer_width = "32")))]
 #[test]
 fn test_roundtrip_asyoulik9_5() {
   test_roundtrip_file!(include_bytes!("../../testdata/asyoulik.txt"), 62384, 10, 15, true, 513, 511);
 }
 
+#[cfg(not(all(target_arch = "arm", target_pointer_width = "32")))]
 #[test]
 fn test_roundtrip_compressed() {
   test_roundtrip_file!(include_bytes!("../../testdata/compressed_file"), 50400, 9, 10, false, 1025, 1024);
 }
 
+#[cfg(not(all(target_arch = "arm", target_pointer_width = "32")))]
 #[test]
 fn test_roundtrip_compressed_repeated() {
   test_roundtrip_file!(include_bytes!("../../testdata/compressed_repeated"),
@@ -355,22 +366,26 @@ fn test_roundtrip_compressed_repeated() {
                        2047);
 }
 
+#[cfg(not(all(target_arch = "arm", target_pointer_width = "32")))]
 #[test]
 fn test_roundtrip_first_58_bytes_alice() {
   test_roundtrip_file!(&include_bytes!("../../testdata/alice29.txt")[..58], 50400, 2, 10, true, 1, 2);
 }
+#[cfg(not(all(target_arch = "arm", target_pointer_width = "32")))]
 #[test]
 fn test_roundtrip_first_2_bytes_alice() {
   test_roundtrip_file!(&include_bytes!("../../testdata/alice29.txt")[..2], 50400, 2, 10, true, 1, 2);
 }
 
 
+#[cfg(not(all(target_arch = "arm", target_pointer_width = "32")))]
 #[test]
 fn test_roundtrip_quickfox() {
   test_roundtrip_file!(include_bytes!("../../testdata/quickfox"), 256, 9, 10, false, 1, 2);
 }
 
 
+#[cfg(not(all(target_arch = "arm", target_pointer_width = "32")))]
 #[test]
 fn test_roundtrip_x() {
   const BUFFER_SIZE: usize = 16384;
@@ -394,6 +409,7 @@ fn test_roundtrip_x() {
   assert_eq!(compressed_offset, compressed.len());
 }
 
+#[cfg(not(all(target_arch = "arm", target_pointer_width = "32")))]
 #[test]
 fn test_roundtrip_empty() {
   let mut compressed: [u8; 2] = [0x06, 0];
