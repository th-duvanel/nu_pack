This patch is based on the upstream commit described below, adpated for use
in the debian package by Peter Michael Green.

Upstream did not make any dependency changes as part of this change, however
the patch breaks the tests with older versions of chrono, so I bumped the
dev-dependency accordingly.

commit 31369d1ef00c30775a8e093c60d94357cf08e299
Author: gamma0987 <gamma0987@posteo.de>
Date:   Thu Feb 8 00:51:02 2024 +0100

    fix(tests): chrono changed its min and max value for duration, year (datetime)

Index: fundu/src/time.rs
===================================================================
--- fundu.orig/src/time.rs
+++ fundu/src/time.rs
@@ -970,7 +970,7 @@ mod tests {
 
     #[cfg(feature = "chrono")]
     const CHRONO_MIN_DURATION: Duration =
-        Duration::negative(i64::MIN.unsigned_abs() / 1000, 808_000_000);
+        Duration::negative(i64::MIN.unsigned_abs() / 1000, 807_000_000);
     #[cfg(feature = "chrono")]
     const CHRONO_MAX_DURATION: Duration = Duration::positive(i64::MAX as u64 / 1000, 807_000_000);
 
@@ -1629,11 +1629,11 @@ mod tests {
         ChronoDuration::seconds(i64::MIN / 1000))
     ]
     #[case::min_secs_and_nanos(
-        Duration::negative(i64::MIN.unsigned_abs() / 1000, 808_000_000),
+        Duration::negative(i64::MIN.unsigned_abs() / 1000, 807_000_000),
         ChronoDuration::min_value())
     ]
     #[case::secs_and_nanos_one_above_min(
-        Duration::negative(i64::MIN.unsigned_abs() / 1000, 808_000_000 - 1),
+        Duration::negative(i64::MIN.unsigned_abs() / 1000, 807_000_000 - 1),
         ChronoDuration::min_value().checked_add(&ChronoDuration::nanoseconds(1)).unwrap())
     ]
     fn test_chrono_duration_try_from_fundu_duration(
Index: fundu/Cargo.toml
===================================================================
--- fundu.orig/Cargo.toml
+++ fundu/Cargo.toml
@@ -129,7 +129,7 @@ optional = true
 default-features = false
 
 [dev-dependencies.chrono]
-version = "0.4.23"
+version = "0.4.32"
 default-features = false
 
 [dev-dependencies.clap]
