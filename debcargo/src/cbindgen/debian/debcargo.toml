overlay = "."
uploaders = ["Sylvestre Ledru <sylvestre@debian.org>"]
excludes = ["tests/expectations/**"]

[source]
section = "utils"
build_depends = ["help2man", "librust-serial-test-dev", "cython3"]

[packages.bin]
summary = "Generates C bindings from Rust code"
section = "utils"

description = """
cbindgen can be used to generate C bindings for Rust code.
It is currently being developed to support creating bindings for
WebRender (by Mozilla for Firefox), but has been designed to support
any project.

Features:

 * Builds bindings for a crate, its mods, its dependent crates, and their mods
 * Only the necessary types for exposed functions are given bindings
 * Can specify annotations for controlling some aspects of binding
 * Support for generic structs and unions
 * Support for exporting constants and statics
 * Customizable formatting, can be used in C or C++ projects
 * Support for generating #ifdef's for #[cfg] attributes
 * Support for #[repr(sized)] tagged enum's
"""

[packages.lib]
test_depends = ["gcc","g++","cython3"]
test_is_broken = true

[packages."lib+clap"]
test_is_broken = false

[packages."lib+default"]
test_is_broken = false

[packages."lib+@"]
test_is_broken = false
