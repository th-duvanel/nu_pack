Inspired by https://github.com/dbus2/zbus/commit/2ff811ff58b64c239961173edd10fd36a5219b8e

Index: zbus/Cargo.toml
===================================================================
--- zbus.orig/Cargo.toml
+++ zbus/Cargo.toml
@@ -235,6 +235,7 @@ xml = ["serde-xml-rs"]
 [target."cfg(unix)".dependencies.nix]
-version = "0.26.0"
+version = "0.27.0"
 features = [
     "socket",
     "uio",
+    "user",
 ]
Index: zbus/src/raw/socket.rs
===================================================================
--- zbus.orig/src/raw/socket.rs
+++ zbus/src/raw/socket.rs
@@ -26,6 +26,8 @@ use nix::{
 };
 #[cfg(unix)]
 use std::os::unix::io::{AsRawFd, FromRawFd, RawFd};
+#[cfg(unix)]
+use std::os::fd::BorrowedFd;
 
 #[cfg(all(unix, not(feature = "tokio")))]
 use std::os::unix::net::UnixStream;
@@ -88,8 +90,8 @@ fn get_unix_pid(fd: &impl AsRawFd) -> io
     {
         use nix::sys::socket::{getsockopt, sockopt::PeerCredentials};
 
-        let fd = fd.as_raw_fd();
-        getsockopt(fd, PeerCredentials)
+        let fd = unsafe { BorrowedFd::borrow_raw(fd.as_raw_fd()) };
+        getsockopt(&fd, PeerCredentials)
             .map(|creds| Some(creds.pid() as _))
             .map_err(|e| e.into())
     }
@@ -111,13 +113,13 @@ fn get_unix_pid(fd: &impl AsRawFd) -> io
 
 #[cfg(unix)]
 fn get_unix_uid(fd: &impl AsRawFd) -> io::Result<Option<u32>> {
-    let fd = fd.as_raw_fd();
+    let fd = unsafe { BorrowedFd::borrow_raw(fd.as_raw_fd()) };
 
     #[cfg(any(target_os = "android", target_os = "linux"))]
     {
         use nix::sys::socket::{getsockopt, sockopt::PeerCredentials};
 
-        getsockopt(fd, PeerCredentials)
+        getsockopt(&fd, PeerCredentials)
             .map(|creds| Some(creds.uid()))
             .map_err(|e| e.into())
     }
