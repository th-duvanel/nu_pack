--- nix.orig/test/sys/test_socket.rs
+++ nix/test/sys/test_socket.rs
@@ -107,3 +107,10 @@
 
-    setsockopt(&rsock, Timestamping, &TimestampingFlag::all()).unwrap();
+    let result = setsockopt(&rsock, Timestamping, &TimestampingFlag::all());
+    if let Err(e) = result {
+        use nix::errno::Errno::ENOPROTOOPT;
+        if e == ENOPROTOOPT {
+            return; // skipped due to lack of kernel support.
+        }
+    }
+    result.unwrap();
 
@@ -861,4 +861,10 @@
         None,
-    )
-    .expect("socket failed");
+    );
+    // don't fail the tests on systems that don't support this functionality
+    if let Err(e) = sock {
+        if e == nix::errno::Errno::EAFNOSUPPORT {
+            return;
+        }
+    }
+    let sock = sock.expect("socket failed");
 
--- nix.orig/test/test_fcntl.rs
+++ nix/test/test_fcntl.rs
@@ -259,3 +259,3 @@
     let mut from_offset: i64 = 3;
-    copy_file_range(
+    let result = copy_file_range(
         tmp1.as_fd(),
@@ -265,4 +265,7 @@
         3,
-    )
-    .unwrap();
+    );
+    if result == Err(nix::errno::Errno::ENOSYS) {
+        return; //the kernel doesn't support this functionality.
+    }
+    result.unwrap();
 
@@ -377,4 +380,10 @@
         let fd = tmp.as_raw_fd();
-        fallocate(fd, FallocateFlags::empty(), 0, 100).unwrap();
-
+        let result = fallocate(fd, FallocateFlags::empty(), 0, 100);
+        // don't fail the tests on systems that don't support this functionality
+        if let Err(e) = result {
+           if e == nix::errno::Errno::EOPNOTSUPP {
+                return;
+           }
+        }
+        result.unwrap();
         // Check if we read exactly 100 bytes
--- nix.orig/src/sys/socket/mod.rs
+++ nix/src/sys/socket/mod.rs
@@ -1850,3 +1850,10 @@
 
-        setsockopt(&rsock, Timestamping, &TimestampingFlag::all())?;
+        if let Err(e) = setsockopt(&rsock, Timestamping, &TimestampingFlag::all()) {
+           use crate::Errno::ENOPROTOOPT;
+           if e != ENOPROTOOPT {
+               return Err(e);
+           } else {
+               return Ok(()); // test skipped due to lack of kernel support.
+           }
+        }
 
