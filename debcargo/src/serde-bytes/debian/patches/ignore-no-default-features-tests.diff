--- a/src/lib.rs
+++ b/src/lib.rs
@@ -17,6 +17,7 @@
 //! # use serde_derive::{Deserialize, Serialize};
 //! use serde::{Deserialize, Serialize};
 //!
+//! # #[cfg(any(feature = "std", feature = "alloc"))]
 //! #[derive(Deserialize, Serialize)]
 //! struct Efficient<'a> {
 //!     #[serde(with = "serde_bytes")]
@@ -69,6 +69,7 @@
 /// # use serde_derive::Serialize;
 /// use serde::Serialize;
 ///
+/// # #[cfg(any(feature = "std", feature = "alloc"))]
 /// #[derive(Serialize)]
 /// struct Efficient<'a> {
 ///     #[serde(with = "serde_bytes")]
--- a/tests/test_derive.rs
+++ b/tests/test_derive.rs
@@ -3,3 +3,5 @@
+#![cfg(any(feature = "std", feature = "alloc"))]
+
 use serde_bytes::{ByteBuf, Bytes};
 use serde_derive::{Deserialize, Serialize};
 use serde_test::{assert_tokens, Token};
--- a/tests/test_partialeq.rs
+++ b/tests/test_partialeq.rs
@@ -3,3 +3,5 @@
+#![cfg(any(feature = "std", feature = "alloc"))]
+
 use serde_bytes::{ByteBuf, Bytes};
 
 fn _bytes_eq_slice(bytes: &Bytes, slice: &[u8]) -> bool {
--- a/tests/test_serde.rs
+++ b/tests/test_serde.rs
@@ -1,3 +1,5 @@
+#![cfg(any(feature = "std", feature = "alloc"))]
+
 use serde_bytes::{ByteBuf, Bytes};
 use serde_test::{assert_de_tokens, assert_ser_tokens, assert_tokens, Token};
 
