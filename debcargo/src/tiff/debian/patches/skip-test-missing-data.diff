--- a/tests/decode_bigtiff_images.rs
+++ b/tests/decode_bigtiff_images.rs
@@ -10,6 +10,7 @@ use std::path::PathBuf;
 const TEST_IMAGE_DIR: &str = "./tests/images/bigtiff";
 
 #[test]
+#[ignore = "skipping, missing test data"]
 fn test_big_tiff() {
     let filenames = ["BigTIFF.tif", "BigTIFFMotorola.tif", "BigTIFFLong.tif"];
     for filename in filenames.iter() {

--- a/tests/decode_images.rs
+++ b/tests/decode_images.rs
@@ -52,7 +52,7 @@ fn test_image_color_type_unsupported(fil
         _ => false,
     });
 }
-
+/*
 #[test]
 fn test_cmyk_u8() {
     test_image_sum_u8("cmyk-3c-8b.tiff", ColorType::CMYK(8), 8522658);
@@ -176,7 +176,7 @@ fn test_string_tags() {
         };
     }
 }
-
+*/
 #[test]
 fn test_decode_data() {
     let mut image_data = Vec::new();
@@ -200,6 +200,7 @@ fn test_decode_data() {
 }
 
 #[test]
+#[ignore = "skipping, missing testdata"]
 fn issue_69() {
     test_image_sum_u16("issue_69_lzw.tiff", ColorType::Gray(16), 1015486);
     test_image_sum_u16("issue_69_packbits.tiff", ColorType::Gray(16), 1015486);
@@ -217,11 +218,13 @@ fn issue_69() {
 //}
 
 #[test]
+#[ignore = "skipping, missing testdata"]
 fn test_tiled_rgb_u8() {
     test_image_sum_u8("tiled-rgb-u8.tif", ColorType::RGB(8), 39528948);
 }
 
 #[test]
+#[ignore = "skipping, missing testdata"]
 fn test_tiled_rect_rgb_u8() {
     test_image_sum_u8("tiled-rect-rgb-u8.tif", ColorType::RGB(8), 62081032);
 }
@@ -232,16 +235,19 @@ fn test_tiled_jpeg_rgb_u8() {
 } */
 
 #[test]
+#[ignore = "skipping, missing testdata"]
 fn test_tiled_oversize_gray_i8() {
     test_image_sum_i8("tiled-oversize-gray-i8.tif", ColorType::Gray(8), 1214996);
 }
 
 #[test]
+#[ignore = "skipping, missing testdata"]
 fn test_tiled_cmyk_i8() {
     test_image_sum_i8("tiled-cmyk-i8.tif", ColorType::CMYK(8), 1759101);
 }
 
 #[test]
+#[ignore = "skipping, missing testdata"]
 fn test_tiled_incremental() {
     let file = "tiled-rgb-u8.tif";
     let expected_type = ColorType::RGB(8);
@@ -464,16 +470,19 @@ fn timeout() {
 }
 
 #[test]
+#[ignore = "skipping, missing testdata"]
 fn test_no_rows_per_strip() {
     test_image_sum_u8("no_rows_per_strip.tiff", ColorType::RGB(8), 99448840);
 }
 
 #[test]
+#[ignore = "skipping, missing testdata"]
 fn test_predictor_3_rgb_f32() {
     test_image_sum_f32("predictor-3-rgb-f32.tif", ColorType::RGB(32), 54004.33);
 }
 
 #[test]
+#[ignore = "skipping, missing testdata"]
 fn test_predictor_3_gray_f32() {
     test_image_sum_f32("predictor-3-gray-f32.tif", ColorType::Gray(32), 20008.275);
 }

--- a/tests/encode_images.rs
+++ b/tests/encode_images.rs
@@ -186,7 +186,7 @@ macro_rules! test_roundtrip {
         }
     };
 }
-
+/*
 test_roundtrip!(test_u8_roundtrip, U8, u8);
 test_roundtrip!(test_u16_roundtrip, U16, u16);
 test_roundtrip!(test_u32_roundtrip, U32, u32);
@@ -268,7 +268,7 @@ fn test_gray_f64_roundtrip() {
 fn test_ycbcr_u8_roundtrip() {
     test_u8_roundtrip::<colortype::YCbCr8>("tiled-jpeg-ycbcr.tif", ColorType::YCbCr(8));
 }
-
+*/
 trait AssertDecode {
     fn assert_tag_u32(&mut self, tag: u16) -> u32;
     fn assert_tag_u32_vec(&mut self, tag: u16) -> Vec<u32>;

--- a/tests/fuzz_tests.rs
+++ b/tests/fuzz_tests.rs
@@ -17,7 +17,7 @@ fn decode_tiff(file: File) -> TiffResult
     decoder.read_image()?;
     Ok(())
 }
-
+/*
 #[test]
 fn oor_panic() {
     test_directory("./tests/fuzz_images/oor_panic", |file| {
@@ -49,3 +49,4 @@ fn divide_by_zero() {
         true
     });
 }
+*/

