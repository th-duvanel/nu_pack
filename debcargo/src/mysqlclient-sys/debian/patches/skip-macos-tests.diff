Description: Skip tests that fail on 32-bit arches
Author: Natthias Geiger <werdahias@riseup.net>
Forwarded: https://github.com/sgrif/mysqlclient-sys/issues/36 
Last-Update: 2023-09-11
---
This patch header follows DEP-3: http://dep.debian.net/deps/dep3/

--- a/src/bindings_macos.rs
+++ b/src/bindings_macos.rs
@@ -146,6 +146,7 @@
     pub extension: *mut ::std::os::raw::c_void,
 }
 #[test]
+#[cfg(not(target_pointer_width = "32"))]
 fn bindgen_test_layout_st_net() {
     assert_eq!(::std::mem::size_of::<st_net>(), 680usize);
     assert_eq!(::std::mem::align_of::<st_net>(), 8usize);
@@ -207,6 +208,7 @@
     pub time_type: enum_mysql_timestamp_type,
 }
 #[test]
+#[cfg(not(target_pointer_width = "32"))]
 fn bindgen_test_layout_st_mysql_time() {
     assert_eq!(::std::mem::size_of::<st_mysql_time>(), 40usize);
     assert_eq!(::std::mem::align_of::<st_mysql_time>(), 8usize);
@@ -225,6 +227,7 @@
     pub data: *mut ::std::os::raw::c_void,
 }
 #[test]
+#[cfg(not(target_pointer_width = "32"))]
 fn bindgen_test_layout_st_list() {
     assert_eq!(::std::mem::size_of::<st_list>(), 24usize);
     assert_eq!(::std::mem::align_of::<st_list>(), 8usize);
@@ -258,6 +261,7 @@
                                                             -> ::std::os::raw::c_int>,
 }
 #[test]
+#[cfg(not(target_pointer_width = "32"))]
 fn bindgen_test_layout_st_mysql_client_plugin() {
     assert_eq!(::std::mem::size_of::<st_mysql_client_plugin>(), 88usize);
     assert_eq!(::std::mem::align_of::<st_mysql_client_plugin>(), 8usize);
@@ -316,6 +316,7 @@ pub struct st_mysql {
 #[derive(Debug, Copy, Clone)]
 pub struct st_mysql_charset_info_st([u8; 0]);
 #[test]
+#[cfg(not(target_pointer_width = "32"))]
 fn bindgen_test_layout_st_mysql() {
     assert_eq!(::std::mem::size_of::<st_mysql>(), 1304usize);
     assert_eq!(::std::mem::align_of::<st_mysql>(), 8usize);
@@ -347,6 +351,7 @@
     MYSQL_VIO_MEMORY = 4,
 }
 #[test]
+#[cfg(not(target_pointer_width = "32"))]
 fn bindgen_test_layout_st_plugin_vio_info() {
     assert_eq!(::std::mem::size_of::<st_plugin_vio_info>(), 8usize);
     assert_eq!(::std::mem::align_of::<st_plugin_vio_info>(), 4usize);
@@ -389,6 +394,7 @@
                                                              info: *mut st_plugin_vio_info)>,
 }
 #[test]
+#[cfg(not(target_pointer_width = "32"))]
 fn bindgen_test_layout_st_plugin_vio() {
     assert_eq!(::std::mem::size_of::<st_plugin_vio>(), 24usize);
     assert_eq!(::std::mem::align_of::<st_plugin_vio>(), 8usize);
@@ -523,6 +529,7 @@
     pub extension: *mut ::std::os::raw::c_void,
 }
 #[test]
+#[cfg(not(target_pointer_width = "32"))]
 fn bindgen_test_layout_st_mysql_field() {
     assert_eq!(::std::mem::size_of::<st_mysql_field>(), 128usize);
     assert_eq!(::std::mem::align_of::<st_mysql_field>(), 8usize);
@@ -550,6 +557,7 @@
     pub size: ::std::os::raw::c_uint,
 }
 #[test]
+#[cfg(not(target_pointer_width = "32"))]
 fn bindgen_test_layout_st_used_mem() {
     assert_eq!(::std::mem::size_of::<st_used_mem>(), 16usize);
     assert_eq!(::std::mem::align_of::<st_used_mem>(), 8usize);
@@ -577,6 +585,7 @@
     pub m_psi_key: PSI_memory_key,
 }
 #[test]
+#[cfg(not(target_pointer_width = "32"))]
 fn bindgen_test_layout_st_mem_root() {
     assert_eq!(::std::mem::size_of::<st_mem_root>(), 88usize);
     assert_eq!(::std::mem::align_of::<st_mem_root>(), 8usize);
@@ -595,6 +604,7 @@
     pub length: ::std::os::raw::c_ulong,
 }
 #[test]
+#[cfg(not(target_pointer_width = "32"))]
 fn bindgen_test_layout_st_mysql_rows() {
     assert_eq!(::std::mem::size_of::<st_mysql_rows>(), 24usize);
     assert_eq!(::std::mem::align_of::<st_mysql_rows>(), 8usize);
@@ -620,6 +630,7 @@
     pub extension: *mut ::std::os::raw::c_void,
 }
 #[test]
+#[cfg(not(target_pointer_width = "32"))]
 fn bindgen_test_layout_st_mysql_data() {
     assert_eq!(::std::mem::size_of::<st_mysql_data>(), 128usize);
     assert_eq!(::std::mem::align_of::<st_mysql_data>(), 8usize);
@@ -748,6 +759,7 @@
     pub bindgen_union_field: u64,
 }
 #[test]
+#[cfg(not(target_arch = "x86"))]
 fn bindgen_test_layout_st_mysql_options__bindgen_ty_1() {
     assert_eq!(::std::mem::size_of::<st_mysql_options__bindgen_ty_1>(),
                8usize);
@@ -760,6 +772,7 @@
     }
 }
 #[test]
+#[cfg(not(target_pointer_width = "32"))]
 fn bindgen_test_layout_st_mysql_options() {
     assert_eq!(::std::mem::size_of::<st_mysql_options>(), 248usize);
     assert_eq!(::std::mem::align_of::<st_mysql_options>(), 8usize);
@@ -808,6 +821,7 @@
     pub mbmaxlen: ::std::os::raw::c_uint,
 }
 #[test]
+#[cfg(not(target_pointer_width = "32"))]
 fn bindgen_test_layout_character_set() {
     assert_eq!(::std::mem::size_of::<character_set>(), 48usize);
     assert_eq!(::std::mem::align_of::<character_set>(), 8usize);
@@ -855,6 +869,7 @@
     pub extension: *mut st_mysql_stmt_extension,
 }
 #[test]
+#[cfg(not(target_pointer_width = "32"))]
 fn bindgen_test_layout_st_mysql_stmt() {
     assert_eq!(::std::mem::size_of::<st_mysql_stmt>(), 880usize);
     assert_eq!(::std::mem::align_of::<st_mysql_stmt>(), 8usize);
@@ -880,6 +895,7 @@
     pub extension: *mut ::std::os::raw::c_void,
 }
 #[test]
+#[cfg(not(target_pointer_width = "32"))]
 fn bindgen_test_layout_st_mysql_res() {
     assert_eq!(::std::mem::size_of::<st_mysql_res>(), 184usize);
     assert_eq!(::std::mem::align_of::<st_mysql_res>(), 8usize);
@@ -1265,6 +1281,7 @@
     pub extension: *mut ::std::os::raw::c_void,
 }
 #[test]
+#[cfg(not(target_pointer_width = "32"))]
 fn bindgen_test_layout_st_mysql_bind() {
     assert_eq!(::std::mem::size_of::<st_mysql_bind>(), 112usize);
     assert_eq!(::std::mem::align_of::<st_mysql_bind>(), 8usize);
