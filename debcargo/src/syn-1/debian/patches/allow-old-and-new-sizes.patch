Upstream changed the expected sizes in test_size.rs to reflect those in rustc
"nightly-2022-09-09", it will likely be some time before a version newer
than that is in Debian. Allow both the old and new values so that the tests
pass in Debian both now and in the future.

Upstream change was in https://github.com/dtolnay/syn/commit/fa1a855ea02661cf79e7d6af1e60b5a4a08698acbut

Index: syn/tests/test_size.rs
===================================================================
--- syn.orig/tests/test_size.rs
+++ syn/tests/test_size.rs
@@ -5,17 +5,23 @@ use syn::{Expr, Item, Lit, Pat, Type};
 
 #[test]
 fn test_expr_size() {
-    assert_eq!(mem::size_of::<Expr>(), 272);
+    if mem::size_of::<Expr>() != 280 {
+        assert_eq! (mem::size_of::<Expr>(), 272);
+    }
 }
 
 #[test]
 fn test_item_size() {
-    assert_eq!(mem::size_of::<Item>(), 320);
+    if mem::size_of::<Item>() != 344 {
+        assert_eq!(mem::size_of::<Item>(), 320);
+    }
 }
 
 #[test]
 fn test_type_size() {
-    assert_eq!(mem::size_of::<Type>(), 288);
+    if mem::size_of::<Type>() != 304 {
+        assert_eq!(mem::size_of::<Type>(), 288);
+    }
 }
 
 #[test]
@@ -25,5 +31,7 @@ fn test_pat_size() {
 
 #[test]
 fn test_lit_size() {
-    assert_eq!(mem::size_of::<Lit>(), 32);
+    if mem::size_of::<Lit>() != 40 {
+        assert_eq!(mem::size_of::<Lit>(), 32);
+    }
 }
